/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/models/Wizard.gltf -o src/components/Wizard.jsx 
*/

import React, { useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";

export function Wizard({ hovered, ...props }) {
  const group = React.useRef();
  const { scene, animations } = useGLTF("/models/Wizard.gltf");
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes, materials } = useGraph(clone);
  const { actions } = useAnimations(animations, group);
  console.log(actions);

  useEffect(() => {
    const anim = hovered ? "Dance" : "Idle";
    actions[anim].reset().fadeIn(0.5).play();

    return () => actions[anim].reset().fadeOut(0.5);
  }, [hovered]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Body} />
          <primitive object={nodes.Head} />
          <skinnedMesh name="Wizard_Blob" geometry={nodes.Wizard_Blob.geometry} material={materials.Atlas} skeleton={nodes.Wizard_Blob.skeleton} />
          <skinnedMesh
            name="Wizard_Blob001"
            geometry={nodes.Wizard_Blob001.geometry}
            material={materials.Atlas}
            skeleton={nodes.Wizard_Blob001.skeleton}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/Wizard.gltf");
